<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lrh.mapper.BlogCommentMapper" >
  <resultMap id="BaseResultMap" type="com.lrh.model.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="to_user_id" property="toUserId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
    <result column="oid" property="oid" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="data_id" property="dataId" jdbcType="BIGINT" />
  </resultMap>
  
  <!-- 用于多对一关联查询的返回结果 -->
  <resultMap id="commentWithUserMap" extends="BaseResultMap" type="com.lrh.model.Comment" >
  
  	<association property="replyUser" column="user_id" javaType="com.lrh.model.User" 
  		select="com.lrh.mapper.UserMapper.selectByPrimaryKey"></association>
  		
	<association property="toUser" column="to_user_id" javaType="com.lrh.model.User" 
  		select="com.lrh.mapper.UserMapper.selectByPrimaryKey"></association>
  		
  </resultMap>
  
  <!-- 用于关联查询评论下的回复以及回复的回复 -->
  <resultMap id="commentWithReplyMap" extends="commentWithUserMap" type="com.lrh.view.CommentView" >
  
  	<association property="commentUser" column="user_id" javaType="com.lrh.model.User" 
  		select="com.lrh.mapper.UserMapper.selectByPrimaryKey"></association>
  		
	<association property="replyCount" column="id" javaType="java.lang.Integer" 
  		select="getReplyCount"></association>
  		
  	<collection property="replys" column="id" ofType="com.lrh.model.Comment" 
	    select="findFiveReplys" javaType="ArrayList" >
	</collection>
	
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, to_user_id, user_id, pid, oid, content, time, data_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from blog_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from blog_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lrh.model.Comment" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_comment (to_user_id, user_id, pid, 
      oid, content, time, 
      data_id)
    values (#{toUserId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{pid,jdbcType=BIGINT}, 
      #{oid,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{dataId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lrh.model.Comment" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="toUserId != null" >
        to_user_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="oid != null" >
        oid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="dataId != null" >
        data_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="toUserId != null" >
        #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="oid != null" >
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null" >
        #{dataId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrh.model.Comment" >
    update blog_comment
    <set >
      <if test="toUserId != null" >
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="oid != null" >
        oid = #{oid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null" >
        data_id = #{dataId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrh.model.Comment" >
    update blog_comment
    set to_user_id = #{toUserId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT},
      oid = #{oid,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <!-- ########################################################################################## -->
  
  <!-- 根据评论id查询评论的回复 -->
  <select id="findFiveReplys" resultMap="commentWithUserMap" parameterType="java.lang.Long">
  	select 
    <include refid="Base_Column_List" />
    from blog_comment
    where 
    data_id = (select data_id from blog_comment where id = #{id,jdbcType=BIGINT})
    and oid = #{id,jdbcType=BIGINT}
    order by time 
    limit 0,5
  </select>
  
  <!-- 根据评论id查询评论的回复 -->
  <select id="moreReply" resultMap="commentWithUserMap" parameterType="java.util.Map">
  	select 
    <include refid="Base_Column_List" />
    from blog_comment
    where 
    data_id = #{dataId,jdbcType=BIGINT}
    and oid = #{oid,jdbcType=BIGINT}
    order by time 
    limit #{start,jdbcType=INTEGER},10
  </select>
  
  <!-- 根据帖子id查询前5条评论 -->
  <select id="findFiveComments" resultMap="commentWithReplyMap" parameterType="java.lang.Long">
  	select 
    <include refid="Base_Column_List" />
    from blog_comment
    where 
    data_id = #{dataId,jdbcType=BIGINT}
    and oid = 0 and pid = 0
    order by time 
    limit 0,5
  </select>
  
  <!-- 根据帖子id和起始位置查询更多评论 -->
  <select id="moreComments" resultMap="commentWithReplyMap" parameterType="java.util.Map">
  	select 
    <include refid="Base_Column_List" />
    from blog_comment
    where 
    data_id = #{dataId,jdbcType=BIGINT}
    and oid = 0 and pid = 0
    order by time 
    limit #{start,jdbcType=INTEGER},10
  </select>
  
  <!-- 根据帖子ID获取评论总数 -->
  <select id="getCommentCount" resultType="java.lang.Integer" parameterType="java.lang.Long">
  	select 
    count(id)
    from blog_comment
    where 
    data_id = #{dataId,jdbcType=BIGINT}
    and oid = 0 and pid = 0
  </select>
  
  <!-- 根据评论ID获取回复总数 -->
  <select id="getReplyCount" resultType="java.lang.Integer" parameterType="java.lang.Long">
  	select 
    count(id)
    from blog_comment
    where 
    data_id = (select data_id from blog_comment where id = #{id,jdbcType=BIGINT})
    and oid = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 多条件查询单条数据 -->
  <select id="getCommentByParams" resultMap="BaseResultMap" parameterType="com.lrh.model.Comment">
  	select 
    <include refid="Base_Column_List" />
    from blog_comment
    where 1=1
    <if test="id !=null">
    	and id = #{id,jdbcType=BIGINT}
    </if>
    <if test="oid !=null">
    	and oid = #{oid,jdbcType=BIGINT}
    </if>
    <if test="pid !=null">
    	and pid = #{pid,jdbcType=BIGINT}
    </if>
    <if test="toUserId !=null">
    	and to_user_id = #{toUserId,jdbcType=INTEGER}
    </if>
    <if test="userId !=null">
    	and user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="dataId !=null">
    	and data_id = #{dataId,jdbcType=BIGINT}
    </if>
  </select>
</mapper>