<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lrh.mapper.DataTypeMapper" >
  <resultMap id="BaseResultMap" type="com.lrh.model.DataType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="main_type" property="mainType" jdbcType="VARCHAR" />
    <result column="type_code" property="typeCode" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type_name, main_type, type_code, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from data_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from data_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lrh.model.DataType" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into data_type (type_name, main_type, type_code, 
      remark)
    values (#{typeName,jdbcType=VARCHAR}, #{mainType,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lrh.model.DataType" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into data_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="mainType != null" >
        main_type,
      </if>
      <if test="typeCode != null" >
        type_code,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="mainType != null" >
        #{mainType,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrh.model.DataType" >
    update data_type
    <set >
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="mainType != null" >
        main_type = #{mainType,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrh.model.DataType" >
    update data_type
    set type_name = #{typeName,jdbcType=VARCHAR},
      main_type = #{mainType,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 通过类型代码获取数据 -->
  <select id="selectByTypeCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from data_type
    where type_code = #{typeCode,jdbcType=VARCHAR}
    group by type_code
  </select>
  
  <!-- 通过主类型代码获取数据 -->
  <select id="selectByMainType" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from data_type
    where main_type = #{mainType,jdbcType=VARCHAR}
    order by type_code
  </select>
  
  <delete id="deleteByTypeCode" parameterType="java.lang.String" >
    delete from data_type
    where type_code = #{typeCode,jdbcType=VARCHAR}
  </delete>
</mapper>